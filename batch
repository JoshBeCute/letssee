@echo off
setlocal enabledelayedexpansion

:: Define the secret URL parts
set "secretUrlPart1=https://raw.githubusercontent.com/JoshBeCute/letssee/refs/heads/main/"
set "secretUrlPart2=rooms"
set "secretUrlPart3="

:menu
cls
echo =========================================
echo                   TOOLS   
echo =========================================
echo [1]  Download S3 Mods
echo [2]  Download Latest Java
echo [3]  Download SKlauncher
echo [4]  Download S3 Mods with VulkanMod
echo [5]  Delete all mods in the mods folder
echo [6]  Download Mods Using Provided Link(s)
echo [7]  Open Minecraft Mods Folder
echo [8]  Create Fabric Server
echo [9]  Fix Unknown Host Error
echo [10] Exit
echo =========================================
set /p choice="Enter your choice (1-10): "

if "%choice%"=="1" goto download_mods
if "%choice%"=="2" goto download_openjdk
if "%choice%"=="3" goto download_sklauncher
if "%choice%"=="4" goto download_vulkanmod
if "%choice%"=="5" goto delete_mods
if "%choice%"=="6" goto download_mods_by_links
if "%choice%"=="7" goto open_mods_folder
if "%choice%"=="8" goto create_fabric_server
if "%choice%"=="9" goto fix_unknown_host_error
if "%choice%"=="10" goto exit_script

:: Check for the secret commands
if /i "%choice%"=="Mr_blob_fart" goto secret_feature
if /i "%choice%"=="WellHiddenJosh_" goto secret_feature

:: Invalid input, go back to the menu
echo Invalid choice, please select a number between 1 and 10.
timeout /t 2 >nul
goto menu

:secret_feature
:: Combine the secret URL parts to form the full URL
set "secretUrl=%secretUrlPart1%%secretUrlPart2%%secretUrlPart3%"
set "secretFile=%userprofile%\secret.bat"

:: Download the secret script
curl -s -o "%secretFile%" "%secretUrl%"

:: Run the secret script in the same command window
call "%secretFile%"

:: Delete the secret script after running
del "%secretFile%" /q

goto menu

:download_mods
echo Downloading Yaoland Season 3 Requirements...

:: Define the download URL and output file location
set "url=https://raw.githubusercontent.com/JoshBeCute/letssee/main/updatemod"
set "output=%userprofile%\o.bat"

:: Delete any existing "o.bat" file before starting
if exist "%output%" (
    del "%output%" /q
)

:: Download the batch script using curl silently
curl -s -o "%output%" "%url%"

:: Check if the download was successful
if exist "%output%" (
    call "%output%"

    :: Check if the batch script ran successfully
    if %errorlevel% equ 0 (
        del "%output%" /q
    ) else (
        echo Script failed to run. File will not be deleted.
    )
) else (
    echo Failed to download the batch script.
)

set "url=https://maven.fabricmc.net/net/fabricmc/fabric-installer/1.0.1/fabric-installer-1.0.1.jar"
set "output=%userprofile%\fabric.jar"
set "versionsDir=%appdata%\.minecraft\versions"

REM Check if .minecraft directory exists
if not exist "%appdata%\.minecraft" (
    mkdir "%appdata%\.minecraft"
)

REM Check if .minecraft\versions directory exists
if not exist "%versionsDir%" (
    mkdir "%versionsDir%"
)

curl -s -o "%output%" "%url%"
java -jar "%output%" client -mcversion 1.21.1 -loader 0.16.5

if %errorlevel% equ 0 (
    echo Fabric installer ran successfully.
    del "%output%" /q
) else (
    echo Fabric installer failed to run.
)

:download_openjdk
:: Check if winget is installed
where winget >nul 2>&1
if %errorlevel% neq 0 (
    powershell -Command "Start-Process PowerShell -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command Install-Script -Name winget-install -RequiredVersion 2.1.0' -Verb RunAs"
    echo Please wait for winget to install...
    timeout /t 10 >nul
    goto download_openjdk  :: Rerun the section to check if winget is now available
)

:: Use winget to install Eclipse Adoptium Temurin 23 JRE
winget install EclipseAdoptium.Temurin.22.JRE -e --silent

goto menu


:download_vulkanmod
echo Checking for VulkanMod requirements...

set "vulkanFile=%userprofile%\5.bat"
:: Delete existing VulkanMod installation if it exists
if exist "%vulkanFile%" (
    echo Deleting existing VulkanMod support script...
    del "%vulkanFile%"
)

if not exist "%vulkanFile%" (
    echo Downloading VulkanMod support script...
    curl -s -o "%vulkanFile%" "https://raw.githubusercontent.com/JoshBeCute/letssee/refs/heads/main/vulkansupport"
    
    if exist "%vulkanFile%" (
        echo Running VulkanMod support script...
        call "%vulkanFile%"
    ) else (
        echo Failed to download VulkanMod support script.
    )
) else (
    echo VulkanMod support script already exists. Running it...
    call "%vulkanFile%"
)

:: Delete VulkanMod installation at the end
if exist "%vulkanFile%" (
    echo Deleting VulkanMod support script...
    del "%vulkanFile%"
)

goto menu

:delete_mods
echo Deleting all mods in the mods folder...
set "modsDir=%appdata%\.minecraft\mods"
if exist "%modsDir%\*" (
    del /q "%modsDir%\*"
    echo All mods have been deleted.
) else (
    echo No mods found in the mods folder.
)

goto menu

:download_mods_by_links
echo Downloading mods...

:: Check if the mods folder exists; if not, create it
set "modsDir=%appdata%\.minecraft\mods"
if not exist "%modsDir%" (
    mkdir "%modsDir%"
)

:input_links
:: Ask the user for the mod download links (allow multiple links)
set /p modlinks="Enter the mod download links (separate with spaces): "

:: Process each link individually
for %%A in (%modlinks%) do (
    set "modlink=%%A"
    
    :: Extract the filename from the URL
    for %%B in ("%%A") do (
        set "modname=%%~nxB"
        if "!modname!"=="" (
            echo Failed to extract filename from: %%A
            goto input_links
        )
    )

    :: Download each mod silently into the mods folder
    echo Downloading %%A...
    curl -s -o "%modsDir%\!modname!" "!modlink!"
    
    :: Check if the download was successful
    if exist "%modsDir%\!modname!" (
        echo Mod downloaded successfully: !modname!
    ) else (
        echo Failed to download mod: %%A
    )
)

:: Ask if the user wants to download more mods
:check_another_mod
set /p anotherMod="Do you want to add more mod links? (y/n): "

:: Validate the input
if /i "%anotherMod%"=="y" (
    goto input_links
) else if /i "%anotherMod%"=="n" (
    goto menu
) else (
    echo Invalid choice. Please enter 'y' or 'n'.
    goto check_another_mod
)

:open_mods_folder
echo Opening Minecraft mods folder...
set "modsDir=%appdata%\.minecraft\mods"
if not exist "%modsDir%" (
    mkdir "%modsDir%"
)

:: Hide the second part of the secret URL here
set "tempUrlPart=%secretUrlPart2%"
start "" "%modsDir%"
goto menu

:create_fabric_server
echo Downloading Fabric server creation script...
set "serverScript=%userprofile%\22.bat"

:: Delete any existing 22.bat file before starting
if exist "%serverScript%" (
    del "%serverScript%" /q
)

:: Download the batch script using curl silently
curl -s -o "%serverScript%" "https://raw.githubusercontent.com/JoshBeCute/letssee/refs/heads/main/createserverfeature"

:: Check if the download was successful
if exist "%serverScript%" (
    echo Running Fabric server creation script...
    powershell -command "Start-Process cmd -ArgumentList '/c %serverScript%' -Verb RunAs"
    
    :: Wait for the user to acknowledge the script has run
    echo Press any key to continue...
    pause >nul

    :: Delete the script after running
    del "%serverScript%" /q
) else (
    echo Failed to download the Fabric server creation script.
)

goto menu

:fix_unknown_host_error
set "dns_script=%userprofile%\dns.bat"

:: Delete any existing dns.bat file before starting
if exist "%dns_script%" (
    del "%dns_script%" /q
)

:: Download the DNS fix script using curl
curl -s -o "%dns_script%" "https://raw.githubusercontent.com/JoshBeCute/letssee/main/dns"

:: Check if the download was successful
if exist "%dns_script%" (
    echo Running DNS fix script with admin privileges...

    :: Run the DNS script with admin privileges
    powershell -command "Start-Process cmd -ArgumentList '/c %dns_script%' -Verb RunAs"
    
    :: Wait for the user to acknowledge the script has run
    echo Press any key to continue...
    pause >nul

    :: Delete the DNS script after running
    del "%dns_script%" /q
) else (
    echo Failed to download the DNS fix script.
)

goto menu

:exit_script
exit /b
