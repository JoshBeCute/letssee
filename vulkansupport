@echo off
setlocal enabledelayedexpansion

:: Define the Minecraft mods directory
set "modsDir=%appdata%\.minecraft\mods"

:: URL of the files containing the list of mod download links
set "listUrl=https://raw.githubusercontent.com/JoshBeCute/letssee/refs/heads/main/vulkansupportmods"
set "additionalListUrl=https://raw.githubusercontent.com/JoshBeCute/letssee/refs/heads/main/modsplayer"

:: Download the list of URLs from the remote files
set "listFile=%temp%\vulkan_list.txt"
set "additionalListFile=%temp%\mods_list.txt"

curl -s -o "%listFile%" "%listUrl%"
curl -s -o "%additionalListFile%" "%additionalListUrl%"

:: Check if the list files were downloaded correctly
if not exist "%listFile%" (
    echo Failed to download the Vulkan mod list.
    exit /b 1
)

if not exist "%additionalListFile%" (
    echo Failed to download the additional mod list.
    exit /b 1
)

:: Read each line from the Vulkan list file and download the corresponding file
for /f "usebackq tokens=*" %%A in ("%listFile%") do (
    set "url=%%A"

    :: Skip empty lines
    if not "!url!"=="" (
        :: Extract filename from URL
        for /f "tokens=*" %%B in ("!url!") do set "filename=%%~nxB"

        :: Sanitize the filename
        set "sanitized="
        for /l %%i in (0,1,31) do (
            set "char=!filename:~%%i,1!"
            if "!char!" neq "" (
                if "!char!" geq "a" if "!char!" leq "z" (
                    set "sanitized=!sanitized!!char!"
                ) else if "!char!" geq "0" if "!char!" leq "9" (
                    set "sanitized=!sanitized!!char!"
                )
            )
        )

        :: Ensure filename is not empty
        if "!sanitized!"=="" (
            echo Error: Filename sanitization
            exit /b 1
        )

        :: Append .jar extension for saving
        set "finalFilename=!sanitized!.jar"

        :: Check if the file already exists
        if not exist "%modsDir%\!finalFilename!" (
            echo Downloading !finalFilename! from !url!...
            curl -s -o "%modsDir%\!finalFilename!" "!url!"
            if errorlevel 1 (
                echo Error downloading !finalFilename!.
                exit /b 1
            )
        ) else (
            echo !finalFilename! already exists.
        )
    )
)

:: Read each line from the additional list file and download the corresponding file
for /f "usebackq tokens=*" %%A in ("%additionalListFile%") do (
    set "url=%%A"

    :: Skip empty lines
    if not "!url!"=="" (
        :: Extract filename from URL
        for /f "tokens=*" %%B in ("!url!") do set "filename=%%~nxB"

        :: Sanitize the filename
        set "sanitized="
        for /l %%i in (0,1,31) do (
            set "char=!filename:~%%i,1!"
            if "!char!" neq "" (
                if "!char!" geq "a" if "!char!" leq "z" (
                    set "sanitized=!sanitized!!char!"
                ) else if "!char!" geq "0" if "!char!" leq "9" (
                    set "sanitized=!sanitized!!char!"
                )
            )
        )

        :: Ensure filename is not empty
        if "!sanitized!"=="" (
            echo Error: Filename sanitization
            exit /b 1
        )

        :: Append .jar extension for saving
        set "finalFilename=!sanitized!.jar"

        :: Check if the file already exists
        if not exist "%modsDir%\!finalFilename!" (
            echo Downloading !finalFilename!
            curl -s -o "%modsDir%\!finalFilename!" "!url!"
            if errorlevel 1 (
                echo Error downloading !finalFilename!.
                exit /b 1
            )
        ) else (
            echo !finalFilename! already exists. 
        )
    )
)

:: List of files to delete after downloading
set "filesToDelete=ImmediatelyFastFabricB enhancedblockentitiesB sodiumfabricbetaB fixantighostforkcrashj Palladiumx guardvillagersjar NetherChestedvFab ImprovedAnvilsjar gravesBjar ViaFabricPlusjar DeathFindervFabri advancednetheritefabric Terralithvjar TerraBlenderfabric"

:: Check for and delete specified files
for %%F in (%filesToDelete%) do (
    if exist "%modsDir%\%%F.jar" (
        del "%modsDir%\%%F.jar"
    )
)

:: Clean up
del "%listFile%"
del "%additionalListFile%"

endlocal
